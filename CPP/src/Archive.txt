// // Print the input parameters
// std::cout << "Input parameters:" << std::endl;
// std::cout << "dt = " << dt << std::endl;
// std::cout << "T = " << T << std::endl;
// std::cout << "Nx = " << Nx << std::endl;
// std::cout << "Ny = " << Ny << std::endl;
// std::cout << "a = " << a << std::endl;
// std::cout << "b = " << b << std::endl;
// std::cout << "mu1 = " << mu1 << std::endl;
// std::cout << "mu2 = " << mu2 << std::endl;
// std::cout << "eps = " << eps << std::endl;

// Some OpenMP fun!

// int nthreads, thread_id;

// #pragma omp parallel private(thread_id)
// {
//     thread_id = omp_get_thread_num();

//     #pragma omp master
//     {
//         nthreads = omp_get_num_threads();
//         std::cout << "Number of threads = " << nthreads << std::endl;
//     }

//     // each thread prints its ID
//     std::cout << "Hello World from thread " << thread_id << std::endl;
// }